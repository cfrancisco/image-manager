FORMAT: 1A
HOST: http://localhost:5000

# Device Management API

Device manager is responsible for management operations (CRUD) over images and templates.

All images are created based on a *template*, which can be thought as a model of a image. As "model" we could think of part numbers or product models - one *prototype* from which images are created. Templates in dojot have one label (any alphanumeric sequece), a list of attributes which will hold all the image emitted information, and optionally a few special attributes which will indicate how the image communicates, including transmission methods (protocol, ports, etc.) and message formats.

In fact, templates can represent not only "image models", but it can also abstract a "class of images". For instance, we could have one template to represent all themometers that will be used in dojot. This template would have only one attribute called, let's say, "temperature". While creating the image, the user would select its "physical template", let's say *TexasInstr882*, and the 'thermometer' template. The user would have also to add translation instructions in order to map the temperature reading that will be sent from the image to a "temperature" attribute.

In order to create a image, a user selects which templates are going to compose this new image. All their attributes are merged together and associated to it - they are tightly linked to the original template so that any template update will reflect all associated images.

This document describes the APIs using ImageManager as a standalone process. If used with other dojot's components, the endpoints might be changed a bit. Check [dojot's documentation](http://dojotdocs.readthedocs.io/) to check all of them.

# Group Templates
Before describing the image APIs, we must detail the template endpoints. As said before, templates are a way to describe the "image model", or, more abstractly, a "image class". These templates contains all the attributes that will be applied to the image. Always remember that they can (and eventually will) be merged into one to create a single image - they must not have attributes with the same name. If this is inevitable, a tag could be added to the attribute name and, while creating the image, translation instructions could be created in order to map each attribute from the incoming message to the appropriate image attribute.

## Templates [/template]

### Register a new template [POST]
Register a new template

+ Request (application/json)
    + Headers

            Authorization: Bearer JWT

    + Body

            {
                "label": "SensorModel",
                "attrs": [
                    {
                        "label": "temperature",
                        "type": "dynamic",
                        "value_type": "float"
                    },
                    {
                        "label" : "model-id",
                        "type" : "static",
                        "value_type" : "string",
                        "static_value" : "model-001"
                    }
                ]
            }

+ Response 200 (application/json)

            {
                "result": "ok",
                "template": {
                    "created": "2017-12-20T18:38:48.983342+00:00",
                    "attrs": [
                        {
                            "template_id": "83af",
                            "created": "2017-12-20T18:38:48.985280+00:00",
                            "label": "temperature",
                            "value_type": "float",
                            "type": "dynamic",
                            "id": 9
                        },
                        {
                            "template_id": "83af",
                            "created": "2017-12-20T18:38:48.988103+00:00",
                            "label": "model-id",
                            "value_type": "string",
                            "type": "static",
                            "static_value" : "model-001",
                            "id": 10
                        }
                    ],
                    "id": "83af",
                    "label": "SensorModel"
                }
            }

+ Response 400 (application/json)

            {
                "errors": {
                    "label": [
                        "Missing data for required field."
                    ]
                },
                "message": "failed to parse input"
            }


### Get the current list of templates [GET]
Get the full list of templates with all their associated attributes.

+ Request
      + Headers

            Authorization: Bearer JWT

+ Response 200 (application/json)

            {
                "pagination": {
                    "has_next": false,
                    "next_page": null,
                    "page": 1,
                    "total": 1
                },
                "templates": [
                    {
                        "attrs": [
                            {
                                "created": "2017-12-27T15:22:13.331950+00:00",
                                "id": 9,
                                "label": "temperature",
                                "template_id": "83af",
                                "type": "dynamic",
                                "value_type": "float"
                            },
                            {
                                "created": "2017-12-27T15:22:13.334498+00:00",
                                "id": 10,
                                "label": "model-id",
                                "static_value": "model-001",
                                "template_id": "83af",
                                "type": "static",
                                "value_type": "string"
                            }
                        ],
                        "created": "2017-12-27T15:22:13.330246+00:00",
                        "id": "83af",
                        "label": "SensorModel"
                    }
                ]
            }


## Template info [/template/{id}]
Access a specific template
+ parameters
    + id: `83af` (required, string) - The template ID

### Delete template [DELETE]
Removes a template. If any image is based on the template being removed, then all its attributes will be also removed.
+ Response 200 (application/json)

            {
                "removed": {
                    "attrs": [
                        {
                            "created": "2017-12-27T15:22:13.331950+00:00",
                            "id": 9,
                            "label": "temperature",
                            "template_id": "83af",
                            "type": "dynamic",
                            "value_type": "float"
                        },
                        {
                            "created": "2017-12-27T15:22:13.334498+00:00",
                            "id": 10,
                            "label": "model-id",
                            "static_value": "model-001",
                            "template_id": "83af",
                            "type": "static",
                            "value_type": "string"
                        }
                    ],
                    "created": "2017-12-27T15:22:13.330246+00:00",
                    "id": "83af",
                    "label": "SensorModel"
                },
                "result": "ok"
            }


+ Response 404 (application/json)

            {
                "message": "No such template: 123",
                "status": 404
            }


### Get template info [GET]
Retrieves all information from a specific template
+ Response 200 (application/json)

            {
                "attrs": [
                    {
                        "created": "2017-12-27T15:27:35.410095+00:00",
                        "id": 9,
                        "label": "temperature",
                        "template_id": "83af",
                        "type": "dynamic",
                        "value_type": "float"
                    },
                    {
                        "created": "2017-12-27T15:27:35.411815+00:00",
                        "id": 10,
                        "label": "model-id",
                        "static_value": "model-001",
                        "template_id": "83af",
                        "type": "static",
                        "value_type": "string"
                    }
                ],
                "created": "2017-12-27T15:27:35.408714+00:00",
                "id": "83af",
                "label": "SensorModel"
            }

+ Response 404 (application/json)

            {
                "message": "No such template: 123",
                "status": 404
            }

### Update template info [PUT]
Replaces all attributes from a specific template.
All images based on this template will be also updated.
+ Request (application/json)
    + Headers

            Authorization: Bearer JWT

    + Body

            {
                "label": "SensorModel",
                "attrs": [
                    {
                        "label": "temperature",
                        "type": "dynamic",
                        "value_type": "float"
                    },
                    {
                        "label": "pressure",
                        "type": "dynamic",
                        "value_type": "float"
                    },
                    {
                        "label": "led",
                        "type": "dynamic",
                        "value_type": "bool"
                    },
                    {
                        "label": "fan",
                        "type": "dynamic",
                        "value_type": "bool"
                    }
                ]
            }


+ Response 200 (application/json)

            {
                "updated": {
                    "created": "2017-12-20T18:52:34.361828+00:00",
                    "attrs": [
                        {
                            "template_id": "83af",
                            "created": "2017-12-20T18:53:19.808891+00:00",
                            "label": "temperature",
                            "value_type": "float",
                            "type": "dynamic",
                            "id": 30
                        },
                        {
                            "template_id": "83af",
                            "created": "2017-12-20T18:53:19.809999+00:00",
                            "label": "pressure",
                            "value_type": "float",
                            "type": "dynamic",
                            "id": 31
                        },
                        {
                            "template_id": "83af",
                            "created": "2017-12-20T18:53:19.810846+00:00",
                            "label": "led",
                            "value_type": "bool",
                            "type": "dynamic",
                            "id": 32
                        },
                        {
                            "template_id": "83af",
                            "created": "2017-12-20T18:53:19.811781+00:00",
                            "label": "fan",
                            "value_type": "bool",
                            "type": "dynamic",
                            "id": 33
                        }
                    ],
                    "id": "83af",
                    "label": "SensorModel"
                },
                "result": "ok"
            }

+ Response 404 (application/json)

            {
                "message": "No such template: 123",
                "status": 404
            }


# Group Devices

All these endpoints are related to CRUD operations over images.

## Devices [/image]
### Get the current list of images [GET /image{?page_size,page_num}]
Get the full list of images with all their associated attributes.
Each attribute from *attrs* is the template ID from where the attributes came from.
In this example, there is only one template (ID 1).
+ Parameters
  + page_size: 20 (integer, optional)
  + page_num: 1 (integer, optional)
+ Request
      + Headers

            Authorization: Bearer JWT

+ Response 200 (application/json)

            {
                "images": [
                    {
                        "attrs": {
                            "83af": [
                                {
                                    "created": "2017-12-20T18:14:43.994796+00:00",
                                    "id": 30,
                                    "label": "tag_temperature",
                                    "template_id": "83af",
                                    "type": "dynamic",
                                    "value_type": "float"
                                },
                                {
                                    "created": "2017-12-20T18:14:44.014065+00:00",
                                    "id": 31,
                                    "label": "tag_pressure",
                                    "template_id": "83af",
                                    "type": "dynamic",
                                    "value_type": "float"
                                },
                                {
                                    "created": "2017-12-20T18:14:44.015474+00:00",
                                    "id": 32,
                                    "label": "tag_led",
                                    "template_id": "83af",
                                    "type": "dynamic",
                                    "value_type": "bool"
                                },
                                {
                                    "created": "2017-12-20T18:14:44.016804+00:00",
                                    "id": 33,
                                    "label": "tag_fan",
                                    "template_id": "83af",
                                    "type": "dynamic",
                                    "value_type": "bool"
                                }
                            ]
                        },
                        "created": "2017-12-20T18:15:08.864677+00:00",
                        "id": "10cf",
                        "label": "sensor-4",
                        "templates": [
                            "83af"
                        ]
                    }
                ],
                "pagination": {
                    "has_next": false,
                    "next_page": null,
                    "page": 1,
                    "total": 1
                }
            }
### Get the current list of images associated with given template [GET /image/template/{templateid}{?page_size,page_num}]
Get the full list of images that belong to a given template..
+ Parameters
  + templateid: 1 (integer, required)
  + page_size: 20 (integer, optional)
  + page_num: 1 (integer, optional)
+ Request
      + Headers

            Authorization: Bearer JWT

+ Response 200 (application/json)

            {
                "images": [
                    {
                        "attrs": {
                            "83af": [
                                {
                                    "created": "2017-12-20T18:14:43.994796+00:00",
                                    "id": 30,
                                    "label": "tag_temperature",
                                    "template_id": "83af",
                                    "type": "dynamic",
                                    "value_type": "float"
                                },
                                {
                                    "created": "2017-12-20T18:14:44.014065+00:00",
                                    "id": 31,
                                    "label": "tag_pressure",
                                    "template_id": "83af",
                                    "type": "dynamic",
                                    "value_type": "float"
                                },
                                {
                                    "created": "2017-12-20T18:14:44.015474+00:00",
                                    "id": 32,
                                    "label": "tag_led",
                                    "template_id": "83af",
                                    "type": "dynamic",
                                    "value_type": "bool"
                                },
                                {
                                    "created": "2017-12-20T18:14:44.016804+00:00",
                                    "id": 33,
                                    "label": "tag_fan",
                                    "template_id": "83af",
                                    "type": "dynamic",
                                    "value_type": "bool"
                                }
                            ]
                        },
                        "created": "2017-12-20T18:15:08.864677+00:00",
                        "id": "10cf",
                        "label": "sensor-4",
                        "templates": [
                            "83af"
                        ]
                    }
                ],
                "pagination": {
                    "has_next": false,
                    "next_page": null,
                    "page": 1,
                    "total": 1
                }
            }

### Register a new image [POST /image{?count,verbose}]
Register a new image. In this example, there is already a template (ID 1) which describes all the attributes to be applied to this image.
+ Parameters
    + count: 3 (integer, optional)
    + verbose: False (boolean, optional) Set to true if full image description is to be returned.
+ Request (application/json)
    + Headers

            Authorization: Bearer JWT

    + Body

            {
              "label": "test_image",
              "templates": [1]
            }

+ Response 200 (application/json)

            {
              "images": [
                {
                  "id": "68fc",
                  "label": "test_image_0"
                },
                {
                  "id": "94dc",
                  "label": "test_image_1"
                },
                {
                  "id": "1ebc",
                  "label": "test_image_2"
                }
              ],
              "message": "images created"
            }


+ Response 400 (application/json)

            {"status" : "Faied to parse payload as JSON"}

+ Response 400 (application/json)

            {"status" : "unknown request format"}

+ Response 400 (application/json)

            {"status" : "image has missing fields"}

+ Response 500 (application/json)

            {"status" : "failed to generate unique id"}

+ Response 500 (application/json)

            {"status" : "failed to configure image"}



## Device info [/image/{id}]
Access a specific image
    + parameters
      + id: (required, string) - The image ID

### Get image info [GET]
Retrieves all information from a specific image
+ Request (application/json)
    + Headers

            Authorization: Bearer JWT

+ Response 200

            {
                "attrs": {
                    "83af": [
                        {
                            "created": "2017-12-20T18:14:43.994796+00:00",
                            "id": 30,
                            "label": "tag_temperature",
                            "template_id": "83af",
                            "type": "dynamic",
                            "value_type": "float"
                        },
                        {
                            "created": "2017-12-20T18:14:44.014065+00:00",
                            "id": 31,
                            "label": "tag_pressure",
                            "template_id": "83af",
                            "type": "dynamic",
                            "value_type": "float"
                        },
                        {
                            "created": "2017-12-20T18:14:44.015474+00:00",
                            "id": 32,
                            "label": "tag_led",
                            "template_id": "83af",
                            "type": "dynamic",
                            "value_type": "bool"
                        },
                        {
                            "created": "2017-12-20T18:14:44.016804+00:00",
                            "id": 33,
                            "label": "tag_fan",
                            "template_id": "83af",
                            "type": "dynamic",
                            "value_type": "bool"
                        }
                    ]
                },
                "created": "2017-12-20T18:15:08.864677+00:00",
                "id": "10cf",
                "label": "sensor-4",
                "templates": [
                    "83af"
                ]
            }


+ Response 404 (application/json)

            {
                "message": "No such image: aaaa",
                "status": 404
            }

### Delete image [DELETE]
Removes a image
+ Response 200 (application/json)

            {
                "removed_image": {
                    "attrs": {
                        "83af": [
                            {
                                "created": "2017-12-20T18:14:43.994796+00:00",
                                "id": 30,
                                "label": "tag_temperature",
                                "template_id": "83af",
                                "type": "dynamic",
                                "value_type": "float"
                            },
                            {
                                "created": "2017-12-20T18:14:44.014065+00:00",
                                "id": 31,
                                "label": "tag_pressure",
                                "template_id": "83af",
                                "type": "dynamic",
                                "value_type": "float"
                            },
                            {
                                "created": "2017-12-20T18:14:44.015474+00:00",
                                "id": 32,
                                "label": "tag_led",
                                "template_id": "83af",
                                "type": "dynamic",
                                "value_type": "bool"
                            },
                            {
                                "created": "2017-12-20T18:14:44.016804+00:00",
                                "id": 33,
                                "label": "tag_fan",
                                "template_id": "83af",
                                "type": "dynamic",
                                "value_type": "bool"
                            }
                        ]
                    },
                    "created": "2017-12-20T18:15:08.864677+00:00",
                    "id": "10cf",
                    "label": "sensor-4",
                    "templates": [
                        "83af"
                    ]
                },
                "result": "ok"
            }

+ Response 404 (application/json)

            {
                "message": "No such image: aaaa",
                "status": 404
            }

### Update image info [PUT]
Replaces all attributes from a specific image.
- TODO: updating images is not yet working properly.
+ Request (application/json)
    + Headers

            Authorization: Bearer JWT

    + Body

            {
                "image_id": "6888",
                "frequency": 2000,
                "label": "test-image",
                "protocol": "MQTT",
                "template": "83af"
            }

+ Response 200 (application/json)

            {
                "image": {
                    "updated": "2017-10-06T11:00:49.127223+00:00",
                    "protocol": "MQTT",
                    "created": "2017-10-06T10:48:18.220313+00:00",
                    "label": "test-image",
                    "frequency": 2000,
                    "attrs": [
                        {
                            "template_id": "83af",
                            "created": "2017-10-06T10:48:15.795690+00:00",
                            "label": "custom.a",
                            "value_type": "string",
                            "type": "dynamic",
                            "id": 1
                        },
                        {
                            "template_id": "1",
                            "created": "2017-10-06T10:48:15.797245+00:00",
                            "label": "custom.b",
                            "value_type": "string",
                            "type": "dynamic",
                            "id": 2
                        },
                        {
                            "template_id": "1",
                            "created": "2017-10-06T10:48:15.797639+00:00",
                            "label": "custom.c",
                            "value_type": "string",
                            "type": "dynamic",
                            "id": 3
                        }
                    ],
                    "template": 1,
                    "image_id": "6888"
                },
                "message": "image updated"
            }

+ Response 400 (application/json)

            {"status" : "unknown request format"}

+ Response 404 (application/json)

            {"status" : "given image was not found"}

+ Response 500 (application/json)

            {"status" : "failed to update image configuration"}
