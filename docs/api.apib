FORMAT: 1A
HOST: http://localhost:8000

# Image-manager

Simple CRUD service for storing firmware image metadata and binaries


# Group Images

## Image Collection [/image/]

### List All Images [GET]

+ Request
        + Headers
            Authorization: Bearer JWT
        
        
+ Response 200 (application/json)
        + Body
            {
                [
                    {
                        "label": "FW_Example",
                        "fw_version": "1.0.0",
                        "hw_version": "1.0.0",
                        "sha1": "asdasdafasfdas"
                    },
                    {
                        "label": "FW_Example",
                        "fw_version": "1.0.1",
                        "hw_version": "1.0.0",
                        "sha1": "asdasdafasfdas"
                    },
            
                ]
            }

### Create a New Image [POST]

Creates a new image based on a JSON object containing the following metadata.

+ label (string) - An informative human-readable label
+ fw_version (string) - FW Semantic versioning info
+ hw_version (string) - HW Semantic versioning info
+ sha1 (string) - Expected SHA1 of the image binary, used for consistency

+ Request (application/json)
        + Headers
            Authorization: Bearer JWT
    
        + Body
            {
                "label": "FW_Example",
                "fw_version": "1.0.0",
                "hw_version": "1.0.0",
                "sha1": "asdasdafasfdas"
            },


+ Response 201 (application/json)

    + Headers

            Location: /image/asdasdasdasdasdas

    + Body

            {
                "label": "FW_Example",
                "published_at": "2014-11-11T08:40:51.620Z",
                "url": "/image/asdasdasdasdasdas",
            }


## Images [/image/{image_id}]

+ Parameters
    + image_id: `08ff7052-2e95-11e3-a1fc-000c294eede0` (guid) - Unique ID

### Retrieve a single image metadata [GET]
+ Request
        + Headers
            Authorization: Bearer JWT

+ Response 200 (application/json)

           {
                "label": "FW_Example",
                "fw_version": "1.0.0",
                "hw_version": "1.0.0",
                "sha1": "asdasdafasfdas"
            },


### Delete [DELETE]
+ Request
        + Headers
            Authorization: Bearer JWT
            
+ Response 204


## Image Binaries [/image/{image_id}/binary]

+ Parameters
    + image_id: `08ff7052-2e95-11e3-a1fc-000c294eede0` (guid) - Unique ID

### Retrieve a single image binary [GET]
+ Request
        + Headers
            Authorization: Bearer JWT

+ Response 200 (application/octet-stream)

### Delete [DELETE]
+ Request
        + Headers
            Authorization: Bearer JWT
            
+ Response 204

### Add binary to an existing image [POST]

+ Request (multipart/form)
        + Headers
            Authorization: Bearer JWT
        + Part
            + name:image


+ Response 201

